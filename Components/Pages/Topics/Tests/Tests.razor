@page "/topics/{id}/tests"
@rendermode InteractiveServer
@using Microsoft.AspNetCore.Authorization
@using BlazorAppCrud.Data;
@using BlazorAppCrud.Models.Entities
@using BlazorAppCrud.Services;
@inherits OwningComponentBase<QuestionsService>
@inject NavigationManager NavigationManager
@attribute [Authorize(Roles = "User,Admin")]
@using Microsoft.AspNetCore.Components
@using BlazorAppCrud.Components.Pages.Topics.Tests.components

<PageTitle>Test</PageTitle>

<h1>Test</h1>

<div class="gap-y-2">
    @foreach(var item in qclist)
    {
        <QuestionCard Question="@item" />
        @* <div class="card mb-3"> *@
        @*     <div class="card-header"> *@
        @*         <h3>@item.Question</h3> *@
        @*     </div> *@
        @*     <div class="card-body"> *@
        @*         <div class="form-group"> *@
        @*             @foreach (var answer in item.Answers) *@
        @*             { *@
        @*             <div class="form-check"> *@
        @*                 <input type="radio" class="form-check-input" id="@answer.Id" name="answer"  @bind-value="@selectedAnswerId"> *@
        @*                 <label class="form-check-label" for="@answer.Id"> *@
        @*                     @answer.Answer *@
        @*                 </label> *@
        @*             </div> *@
        @*             } *@
        @*         </div> *@
        @* *@
        @*         <button class="btn btn-primary" @onclick="CheckAnswer">Check Answer</button> *@
        @* *@
        @*         @if (showResult) *@
        @*         { *@
        @*         <div class="mt-2"> *@
        @*             @if (isCorrect) *@
        @*             { *@
        @*             <p class="text-success">Correct!</p> *@
        @*             } *@
        @*             else *@
        @*             { *@
        @*             <p class="text-danger">Incorrect. The correct answer is: @(item.Answers.FirstOrDefault(a => a.IsCorrect)?.Answer ?? "N/A")</p> *@
        @*             } *@
        @*         </div> *@
        @*         } *@
        @*     </div> *@
        @* </div> *@
    }
</div>

<div style="text-align: center;">
   
    
    @code{
        [Parameter] public string id { get; set; }
       
        [CascadingParameter]
        private Task<AuthenticationState> authenticationState { get; set; }

        IList<QuestionsClass> qclist;
        
        private string selectedAnswerId;
        private bool showResult = false;
        private bool isCorrect = false;

        private void CheckAnswer()
        {
            showResult = true;
            // isCorrect = selectedAnswerId == item.Answers.FirstOrDefault(a => a.IsCorrect)?.Id;
        }

        protected override void OnInitialized()
        {
            qclist = Service.GetTestQuestionsByTopicId(id, 5);
        }
}
</div>