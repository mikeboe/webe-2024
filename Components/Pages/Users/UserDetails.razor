@page "/users/{id}"
@rendermode InteractiveServer

@using BlazorAppCrud.Data;
@using BlazorAppCrud.Models.Entities
@using BlazorAppCrud.Models.ViewModels
@using BlazorAppCrud.Services;
@using Microsoft.AspNetCore.Http.Extensions
@inherits OwningComponentBase<UserService>
@inject NavigationManager NavigationManager

<PageTitle>User @userName</PageTitle>
<h1>User @userName</h1>

@if (!editing)
{
    <div class="card">
        <div class="card-header">
            <div class="d-flex justify-content-between">
                <h3>Details</h3>
                <button class="btn btn-primary" @onclick="() => editing = true">Edit</button>
            </div>
        </div>
        <div class="card-body">
            <p>User Name: @Model.UserName</p>
            <p>Email: @Model.Email</p>
            <p>Role: @Model.Role</p>
        </div>
    </div>
}
else
{
    <div class="card">
        <div class="card-header">
            <div class="d-flex justify-content-between">
            <h3>Edit Details</h3>
            <button class="btn btn-success" @onclick=@(() => UpdateUser())>Save</button>
            </div>
        </div>
        <div class="card-body">
            <div class="flex-row mb-2">
                <div>User Name</div>
                <input type="text" @bind-value="@Model.UserName" @bind-value:event="oninput" />
                
            </div>
            <div class="flex-row mb-2">
                <div>Email</div>
                <input type="text" @bind-value="@Model.Email" @bind-value:event="oninput" />
               
            </div>
            <div class="flex-row mb-2">
                <div>Role</div>
                <select @bind-value="@Model.Role" @bind-value:event="onchange">
                    <option value="User">User</option>
                    <option value="Admin">Admin</option>
                </select>
            </div>
        </div>
    </div>
}

@code {
    [Parameter]
    public string id { get; set; }
    
    public UpdateUserModel Model { get; set; } = new();
    
    public string userName;
    public string email;

    public bool editing = false;
    
    protected override void OnInitialized()
    {
        UserClass user = Service.GetUserById(id);
        Model.UserName = user.UserName;
        Model.Email = user.Email;
        Model.Role = user.Role;
    }

    public void UpdateUser()
    {
        UserClass user = new UserClass();
        user.Id = id;
        user.UserName = Model.UserName;
        user.Email = Model.Email;
        user.Role = Model.Role;
        
        var success = Service.UpdateRecord(user);
        if (success)
        {
            editing = false;
        }
        

    }
}